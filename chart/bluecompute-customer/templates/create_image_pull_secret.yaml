apiVersion: batch/v1
kind: Job
metadata:
  name: "{{.Chart.Name}}-create-image-pull-secret-{{.Release.Name}}-{{ randAlphaNum 5 | lower }}"
  labels:
    app: bluecompute
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "34"
spec:
  template:
    metadata:
      name: "{{.Chart.Name}}-create-image-pull-secret-{{.Release.Name}}"
      labels:
        app: bluecompute
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      restartPolicy: Never
      containers:
      - name: create-image-pull-secret
        image: ibmcase/kubectl:latest
        command: [ "/bin/bash", "-c" ]
        imagePullPolicy: IfNotPresent
        {{- if .Values.image.pullSecret }}
        # TODO: secret management per image ??
        args: 
        - >
            set -x;
            registry_name=`echo {{ .Values.image.repository }} | cut -d/ -f1`;
            token=`echo -n "token:{{ .Values.image.pullSecret }}" | base64 | xargs -n1 echo -n`;
            echo "{\"${registry_name}\":{\"auth\":\"${token}\"}}" > /tmp/dockerconfigjson;
            kubectl get secret {{ .Values.image.pullSecretName }} && kubectl delete secret {{ .Values.image.pullSecretName }};
            kubectl create secret generic {{ .Values.image.pullSecretName }} --from-file=.dockercfg=/tmp/dockerconfigjson --type=kubernetes.io/dockercfg --namespace {{ .Release.Namespace }}

        {{- else}}
        args: 
        - >
            exit 0
        {{- end}}
