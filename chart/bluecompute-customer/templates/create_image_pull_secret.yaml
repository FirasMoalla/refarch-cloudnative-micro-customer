apiVersion: batch/v1
kind: Job
metadata:
  name: "{{.Chart.Name}}-create-image-pull-secret-{{.Release.Name}}"
  labels:
    app: bluecompute
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "34"
spec:
  template:
    metadata:
      name: "{{.Chart.Name}}-create-image-pull-secret-{{.Release.Name}}"
      labels:
        app: bluecompute
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      restartPolicy: Never
      containers:
      - name: create-image-pull-secret
        image: ibmcase/kubectl:latest
        command: [ "/bin/bash", "-c" ]
        {{- if eq .Values.image.pullSecret "" -}}
        # TODO: manage secrets per image?
        args: 
        - >
            set -x
            registry_name=`echo {{ .Values.image.repository }} | cut -d/ -f1`;
            echo "{\"${registry_name}\":{\"auth\":\"{{ .Values.image.pullSecret }}\"}}" > /tmp/dockerconfigjson;
            kubectl create secret {{ .Values.image.pullSecretName }} \
              --from-file=.dockecfg=/tmp/dockerconfigjson \
              --type=kubernetes.io/dockercfg  \
              --namespace {{ .Release.Namespace }}
        {{- else -}}
        args: ["exit 0"]
        {{- end --}
        imagePullPolicy: IfNotPresent
        env:
        - name: BLUEMIX_API_KEY
          value: {{ .Values.secret.apiKey }}
